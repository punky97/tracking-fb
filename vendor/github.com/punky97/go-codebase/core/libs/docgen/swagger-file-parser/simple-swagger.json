{
  "swagger": "2.0",
  "info": {
    "title": "Swagger Example API",
    "description": "This is a sample server Petstore server.",
    "termsOfService": "http://swagger.io/terms/",
    "version": "1.0",
    "contact": {
      "name": "API Support",
      "url": "http://www.swagger.io/support",
      "email": "support@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "petstore.swagger.io",
  "basePath": "/v2",
  "paths": {
    "/api/": {
      "post": {
        "summary": "Upload file",
        "description": "Upload file",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tags"
            }
          },
          "400": {
            "description": "We need ID!!",
            "schema": {
              "$ref": "#/definitions/APIError"
            }
          },
          "404": {
            "description": "Can not find ID",
            "schema": {
              "$ref": "#/definitions/APIError"
            }
          }
        },
        "parameters": [
          {
            "name": "file",
            "description": "this is a test file",
            "in": "formData",
            "required": true,
            "type": "file"
          },
          {
            "name": "file",
            "description": "this is a test file",
            "in": "body",
            "required": false,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/Request",
              "description": "this is a test file"
            }
          }
        ],
        "operationId": "file.upload",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ]
      }
    }
  },
  "schemes": null,
  "consumes": null,
  "produces": null,
  "definitions": {
    "APIError": {
      "properties": {
        "created_at": {
          "type": "string"
        },
        "error_code": {
          "type": "integer"
        },
        "error_message": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Contact": {
      "properties": {
        "address": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Cross": {
      "properties": {
        "array": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "string": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DiscountApplications": {
      "properties": {
        "allocation_method": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "target_selection": {
          "type": "string"
        },
        "target_type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "value_type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "NoteAttributes": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrderLineItem": {
      "properties": {
        "admin_graphql_api_id": {
          "type": "string"
        },
        "fulfillable_quantity": {
          "type": "integer"
        },
        "fulfillment_service": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "number"
        },
        "product_id": {
          "type": "integer"
        },
        "product_ref_id": {
          "type": "integer"
        },
        "properties": {
          "items": {
            "$ref": "#/definitions/Properties"
          },
          "type": "array"
        },
        "quantity": {
          "type": "integer"
        },
        "ref_id": {
          "type": "string"
        },
        "requires_shipping": {
          "type": "boolean"
        },
        "sku": {
          "type": "string"
        },
        "taxable": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "total_discount": {
          "type": "number"
        },
        "variant_id": {
          "type": "integer"
        },
        "variant_title": {
          "type": "string"
        },
        "vendor": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Pet": {
      "properties": {
        "Data": {
          "type": "integer"
        },
        "Err": {
          "type": "integer"
        },
        "Status": {
          "type": "boolean"
        },
        "category": {
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "photo_urls": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "format": "url"
            },
            "small_category": {
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "maxLength": 16,
                  "minLength": 4,
                  "type": "string"
                },
                "photo_urls": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "cross": {
          "$ref": "#/definitions/Cross"
        },
        "crosses": {
          "items": {
            "$ref": "#/definitions/Cross"
          },
          "type": "array"
        },
        "data": {
          "type": "object"
        },
        "enum_array": {
          "items": {
            "enum": [
              1,
              2,
              3,
              5,
              7
            ],
            "type": "integer"
          },
          "type": "array"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "int_array": {
          "items": {
            "type": "integer"
          },
          "type": "array"
        },
        "is_alive": {
          "type": "boolean",
          "default": true
        },
        "name": {
          "type": "string"
        },
        "order": {
          "$ref": "#/definitions/simple1.Order"
        },
        "order_2": {
          "$ref": "#/definitions/models.Order"
        },
        "pets": {
          "items": {
            "$ref": "#/definitions/Pet2"
          },
          "type": "array"
        },
        "pets2": {
          "items": {
            "$ref": "#/definitions/Pet2"
          },
          "type": "array",
          "description": "Description of Pet2 field"
        },
        "photo_urls": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "price": {
          "maximum": 1000,
          "minimum": 1,
          "type": "number"
        },
        "status": {
          "enum": [
            "healthy",
            "ill"
          ],
          "type": "string",
          "description": "Status of Pet: healthy or ill"
        },
        "tags": {
          "items": {
            "$ref": "#/definitions/Tag"
          },
          "type": "array"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Pet2": {
      "properties": {
        "deleted_at": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "middlename": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Properties": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Request": {
      "properties": {
        "id": {
          "maximum": 1000,
          "minimum": 1,
          "enum": [
            1,
            23,
            45
          ],
          "type": "integer",
          "description": "this is id of Request"
        },
        "message": {
          "maxLength": 100,
          "type": "string",
          "description": "message when something wrong"
        }
      },
      "type": "object"
    },
    "RevValue": {
      "properties": {
        "Data": {
          "type": "integer"
        },
        "Err": {
          "type": "integer"
        },
        "Status": {
          "type": "boolean"
        },
        "cross": {
          "$ref": "#/definitions/Cross"
        },
        "crosses": {
          "items": {
            "$ref": "#/definitions/Cross"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RevValueBase": {
      "properties": {
        "Err": {
          "type": "integer"
        },
        "Status": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Tag": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "pets": {
          "items": {
            "$ref": "#/definitions/Pet"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Tags": {
      "items": {
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "pets": {
            "items": {
              "$ref": "#/definitions/Pet"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "models.Order": {
      "properties": {
        "admin_graphql_api_id": {
          "type": "string"
        },
        "billing_address": {
          "type": "object"
        },
        "bk_app_source": {
          "type": "string"
        },
        "cancelled_at": {
          "type": "integer"
        },
        "cart": {
          "type": "integer"
        },
        "cart_ref": {
          "type": "integer"
        },
        "cart_token": {
          "type": "string"
        },
        "contact_id": {
          "type": "integer"
        },
        "contact_ref_id": {
          "type": "string"
        },
        "created_at": {
          "type": "integer"
        },
        "currency": {
          "type": "string"
        },
        "db_created_at": {
          "type": "integer"
        },
        "db_updated_at": {
          "type": "integer"
        },
        "discount_applications": {
          "items": {
            "$ref": "#/definitions/DiscountApplications"
          },
          "type": "array"
        },
        "email": {
          "type": "string"
        },
        "financial_status": {
          "type": "string"
        },
        "fulfillment_status": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "is_has_cart_params": {
          "type": "boolean"
        },
        "is_has_cart_params_bsales": {
          "type": "boolean"
        },
        "is_has_cart_params_precs": {
          "type": "boolean"
        },
        "is_order_dropship": {
          "type": "boolean"
        },
        "line_items": {
          "items": {
            "$ref": "#/definitions/OrderLineItem"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "note_attributes": {
          "items": {
            "$ref": "#/definitions/NoteAttributes"
          },
          "type": "array"
        },
        "processed_at": {
          "type": "integer"
        },
        "processed_cpb": {
          "type": "boolean"
        },
        "ref_id": {
          "type": "number"
        },
        "revenue_generated_sources": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "shipping_address": {
          "type": "object"
        },
        "shop_id": {
          "type": "integer"
        },
        "source_name": {
          "type": "string"
        },
        "subtotal_price": {
          "type": "number"
        },
        "sync_cart_param_info": {
          "type": "string"
        },
        "time_day": {
          "type": "integer"
        },
        "time_month": {
          "type": "integer"
        },
        "time_week": {
          "type": "integer"
        },
        "time_year": {
          "type": "integer"
        },
        "total_discounts": {
          "type": "number"
        },
        "total_line_items_price": {
          "type": "number"
        },
        "total_price": {
          "type": "number"
        },
        "total_tax": {
          "type": "number"
        },
        "updated_at": {
          "type": "integer"
        },
        "utm_data": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "simple1.Order": {
      "properties": {
        "contact": {
          "$ref": "#/definitions/Contact"
        },
        "id": {
          "type": "integer"
        },
        "number": {
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    },
    "BasicAuth": {
      "type": "basic"
    },
    "OAuth2AccessCode": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://example.com/oauth/authorize",
      "tokenUrl": "https://example.com/oauth/token",
      "scopes": {
        "admin": " Grants read and write access to administrative information"
      }
    },
    "OAuth2Application": {
      "type": "oauth2",
      "flow": "application",
      "tokenUrl": "https://example.com/oauth/token",
      "scopes": {
        "admin": " Grants read and write access to administrative information",
        "write": " Grants write access"
      }
    },
    "OAuth2Implicit": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://example.com/oauth/authorize",
      "scopes": {
        "admin": " Grants read and write access to administrative information",
        "write": " Grants write access"
      }
    },
    "OAuth2Password": {
      "type": "oauth2",
      "flow": "password",
      "tokenUrl": "https://example.com/oauth/token",
      "scopes": {
        "admin": " Grants read and write access to administrative information",
        "read": " Grants read access",
        "write": " Grants write access"
      }
    }
  }
}